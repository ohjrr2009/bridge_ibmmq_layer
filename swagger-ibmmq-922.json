{
  "swagger" : "2.0",
  "info" : {
    "description" : "Discover REST APIs available within Liberty",
    "version" : "1.0.0",
    "title" : "Liberty REST APIs"
  },
  "host" : "localhost:9443",
  "tags" : [ {
    "name" : "mft : agent"
  }, {
    "name" : "mft : monitor"
  }, {
    "name" : "mft : transfer"
  }, {
    "name" : "channel"
  }, {
    "name" : "installation"
  }, {
    "name" : "qmgr"
  }, {
    "name" : "qmgr : action"
  }, {
    "name" : "messaging"
  }, {
    "name" : "queue"
  }, {
    "name" : "subscription"
  }, {
    "name" : "login"
  }, {
    "name" : "API Discovery",
    "description" : "APIs available from the API Discovery feature"
  } ],
  "definitions" : {
    "AgentAttributePojo" : {
      "type" : "object",
      "required" : [ "name", "state", "type" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "general" : {
          "$ref" : "#/definitions/AgentAttributePojoGeneral"
        },
        "qmgrConnection" : {
          "$ref" : "#/definitions/AgentAttributePojoQmgrconnection"
        },
        "protocolBridge" : {
          "$ref" : "#/definitions/AgentAttributePojoProtocolbridge"
        },
        "standbyInstance" : {
          "$ref" : "#/definitions/AgentAttributePojoStandbyinstance"
        },
        "connectDirectBridge" : {
          "$ref" : "#/definitions/AgentAttributePojoConnectdirectbridge"
        }
      }
    },
    "AgentAttributePojoConnectdirectbridge" : {
      "type" : "object",
      "required" : [ "host", "nodeName", "port" ],
      "properties" : {
        "nodeName" : {
          "type" : "string",
          "description" : "\t"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "host" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "AgentAttributePojoGeneral" : {
      "type" : "object",
      "required" : [ "description", "level", "maximumDestinationTransfers", "maximumQueuedTransfers", "maximumSourceTransfers", "operatingSystem", "statusAge", "statusPublicationRate", "statusPublishTime", "version" ],
      "properties" : {
        "maximumQueuedTransfers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "statusPublicationRate" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "level" : {
          "type" : "string",
          "description" : "\t"
        },
        "statusAge" : {
          "type" : "string",
          "description" : "\t"
        },
        "maximumSourceTransfers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "description" : {
          "type" : "string",
          "description" : "\t"
        },
        "statusPublishTime" : {
          "type" : "string",
          "description" : "\t"
        },
        "maximumDestinationTransfers" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "version" : {
          "type" : "string",
          "description" : "\t"
        },
        "operatingSystem" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "AgentAttributePojoProtocolbridge" : {
      "type" : "object",
      "required" : [ "defaultServer", "endpoint" ],
      "properties" : {
        "endpoint" : {
          "type" : "string",
          "description" : "\t"
        },
        "defaultServer" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "AgentAttributePojoQmgrconnection" : {
      "type" : "object",
      "required" : [ "channelName", "host", "port", "qmgrName", "standbyHost", "standbyPort", "transportType" ],
      "properties" : {
        "standbyPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "host" : {
          "type" : "string",
          "description" : "\t"
        },
        "qmgrName" : {
          "type" : "string",
          "description" : "\t"
        },
        "channelName" : {
          "type" : "string",
          "description" : "\t"
        },
        "transportType" : {
          "type" : "string",
          "description" : "\t"
        },
        "standbyHost" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "AgentAttributePojoStandbyinstance" : {
      "type" : "object",
      "required" : [ "host", "version" ],
      "properties" : {
        "host" : {
          "type" : "string",
          "description" : "\t"
        },
        "version" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "ErrorPojo" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of error, for example \"rest\" meaning an error in the REST API itself."
        },
        "msgId" : {
          "type" : "string",
          "description" : "A unique identifier for the error category."
        },
        "message" : {
          "type" : "string",
          "description" : "An explanatory message describing the problem."
        },
        "explanation" : {
          "type" : "string",
          "description" : "A more detailed message describing the problem."
        },
        "action" : {
          "type" : "string",
          "description" : "An outline of how the user could avoid the problem."
        },
        "qmgrName" : {
          "type" : "string",
          "description" : "The name of queue manager on which the operation failed, only returned for errors in queue sharing group operations."
        },
        "completioncode" : {
          "type" : "string",
          "description" : "The MQ completion code associated with the failure - 0 (MQCC_OK) if not applicable."
        },
        "reasonCode" : {
          "type" : "string",
          "description" : "The MQ reason code associated with the failure - 0 (MQRC_NONE) if not applicable."
        }
      }
    },
    "ExceptionPojo" : {
      "type" : "object",
      "properties" : {
        "summary" : {
          "type" : "string",
          "description" : "Exception summary - exception type and the failing thread name."
        },
        "stackTrace" : {
          "type" : "array",
          "description" : "The stack trace of the exception.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "MonitorAttributePojo" : {
      "type" : "object",
      "required" : [ "agentName", "name", "state", "type" ],
      "properties" : {
        "general" : {
          "$ref" : "#/definitions/MonitorAttributePojoGeneral"
        },
        "triggerCondition" : {
          "$ref" : "#/definitions/MonitorAttributePojoTriggerCondition"
        },
        "transferDefinition" : {
          "$ref" : "#/definitions/MonitorAttributePojoTransferDefinition"
        },
        "resource" : {
          "$ref" : "#/definitions/MonitorAttributePojoResource"
        },
        "triggerFileContentFormat" : {
          "$ref" : "#/definitions/MonitorAttributePojoTriggerFileContentFormat"
        },
        "name" : {
          "type" : "string"
        },
        "userProperties" : {
          "$ref" : "#/definitions/MonitorAttributePojoUserProperties"
        },
        "agentName" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "started", "stopped" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "directory", "queue" ]
        },
        "defaultVariables" : {
          "$ref" : "#/definitions/MonitorAttributePojoDefaultVariables"
        }
      }
    },
    "MonitorAttributePojoAntScript" : {
      "type" : "object",
      "required" : [ "arguments", "name", "target" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "arguments" : {
          "type" : "string"
        },
        "target" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoDatasetExtended" : {
      "type" : "object",
      "required" : [ "delimiterPosition", "hexDelimiters" ],
      "properties" : {
        "hexDelimiters" : {
          "type" : "string"
        },
        "delimiterPosition" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoDefaultVariables" : {
      "type" : "object"
    },
    "MonitorAttributePojoDestination" : {
      "type" : "object",
      "required" : [ "actionIfExists", "encoding", "endOfLine", "name", "type", "userId" ],
      "properties" : {
        "actionIfExists" : {
          "type" : "string",
          "enum" : [ "error", "overwrite" ]
        },
        "datasetExtended" : {
          "$ref" : "#/definitions/MonitorAttributePojoDatasetExtended"
        },
        "endOfLine" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "queueExtended" : {
          "$ref" : "#/definitions/MonitorAttributePojoQueueExtended"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "queue", "directory", "file", "dataset", "partionedDataset" ]
        },
        "encoding" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoDestinationAgent" : {
      "type" : "object",
      "required" : [ "name", "qmgrName" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoExecutable" : {
      "type" : "object",
      "required" : [ "arguments", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "arguments" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoGeneral" : {
      "type" : "object",
      "required" : [ "matchesPerTask", "pollInterval", "pollIntervalUnit" ],
      "properties" : {
        "pollInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "matchesPerTask" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pollIntervalUnit" : {
          "type" : "string",
          "enum" : [ "seconds", "minutes", "hours", "days" ]
        }
      }
    },
    "MonitorAttributePojoItem" : {
      "type" : "object",
      "required" : [ "checksum", "mode" ],
      "properties" : {
        "mode" : {
          "type" : "string",
          "enum" : [ "text", "binary" ]
        },
        "destination" : {
          "$ref" : "#/definitions/MonitorAttributePojoDestination"
        },
        "checksum" : {
          "type" : "string",
          "enum" : [ "none", "md5" ]
        },
        "source" : {
          "$ref" : "#/definitions/MonitorAttributePojoSource"
        }
      }
    },
    "MonitorAttributePojoJcl" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoJob" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "MonitorAttributePojoOriginator" : {
      "type" : "object",
      "required" : [ "host", "userId" ],
      "properties" : {
        "host" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoPostDestinationCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/MonitorAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/MonitorAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/MonitorAttributePojoAntScript"
        }
      }
    },
    "MonitorAttributePojoPostSourceCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/MonitorAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/MonitorAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/MonitorAttributePojoAntScript"
        }
      }
    },
    "MonitorAttributePojoPreDestinationCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/MonitorAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/MonitorAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/MonitorAttributePojoAntScript"
        }
      }
    },
    "MonitorAttributePojoPreSourceCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/MonitorAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/MonitorAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/MonitorAttributePojoAntScript"
        }
      }
    },
    "MonitorAttributePojoQueueExtended" : {
      "type" : "object",
      "required" : [ "delimiterPosition", "hexDelimiters", "messageArrivalWaitTime", "textDelimiters", "useMessageGroup" ],
      "properties" : {
        "useMessageGroup" : {
          "type" : "string"
        },
        "hexDelimiters" : {
          "type" : "string"
        },
        "delimiterPosition" : {
          "type" : "string"
        },
        "messageArrivalWaitTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "textDelimiters" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoResource" : {
      "type" : "object",
      "required" : [ "name", "recursionLevel" ],
      "properties" : {
        "recursionLevel" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoSource" : {
      "type" : "object",
      "required" : [ "disposition", "encoding", "name", "recursive", "type" ],
      "properties" : {
        "disposition" : {
          "type" : "string",
          "enum" : [ "leave", "delete" ]
        },
        "datasetExtended" : {
          "$ref" : "#/definitions/MonitorAttributePojoDatasetExtended"
        },
        "name" : {
          "type" : "string"
        },
        "queueExtended" : {
          "$ref" : "#/definitions/MonitorAttributePojoQueueExtended"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "file", "queue" ]
        },
        "encoding" : {
          "type" : "string"
        },
        "recursive" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoSourceAgent" : {
      "type" : "object",
      "required" : [ "name", "qmgrName" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoTransferDefinition" : {
      "type" : "object",
      "properties" : {
        "transferSet" : {
          "$ref" : "#/definitions/MonitorAttributePojoTransferSet"
        },
        "originator" : {
          "$ref" : "#/definitions/MonitorAttributePojoOriginator"
        },
        "destinationAgent" : {
          "$ref" : "#/definitions/MonitorAttributePojoDestinationAgent"
        },
        "job" : {
          "$ref" : "#/definitions/MonitorAttributePojoJob"
        },
        "sourceAgent" : {
          "$ref" : "#/definitions/MonitorAttributePojoSourceAgent"
        }
      }
    },
    "MonitorAttributePojoTransferSet" : {
      "type" : "object",
      "required" : [ "priority", "recoveryTimeout" ],
      "properties" : {
        "item" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MonitorAttributePojoItem"
          }
        },
        "postDestinationCall" : {
          "$ref" : "#/definitions/MonitorAttributePojoPostDestinationCall"
        },
        "recoveryTimeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userProperties" : {
          "$ref" : "#/definitions/MonitorAttributePojoUserProperties"
        },
        "postSourceCall" : {
          "$ref" : "#/definitions/MonitorAttributePojoPostSourceCall"
        },
        "preDestinationCall" : {
          "$ref" : "#/definitions/MonitorAttributePojoPreDestinationCall"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "preSourceCall" : {
          "$ref" : "#/definitions/MonitorAttributePojoPreSourceCall"
        }
      }
    },
    "MonitorAttributePojoTriggerCondition" : {
      "type" : "object",
      "required" : [ "excludePattern", "fileSize", "fileSizeUnit", "includePattern", "matchPattern", "noFileSizeChangePollCount", "type" ],
      "properties" : {
        "noFileSizeChangePollCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fileSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fileSizeUnit" : {
          "type" : "string",
          "enum" : [ "bytes", "kilobytes", "megabytes", "gigabytes" ]
        },
        "excludePattern" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "matchAll", "matchNone", "noChangeInSize", "sizeGreaterOrEqualTo", "queueNotEmpty", "completeMessageGroups" ]
        },
        "matchPattern" : {
          "type" : "string",
          "enum" : [ "wildcard", "regularExpression" ]
        },
        "includePattern" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoTriggerFileContentFormat" : {
      "type" : "object",
      "required" : [ "customPattern", "groupOrder" ],
      "properties" : {
        "groupOrder" : {
          "type" : "string",
          "enum" : [ "sourceDestination", "destinationSource" ]
        },
        "customPattern" : {
          "type" : "string"
        }
      }
    },
    "MonitorAttributePojoUserProperties" : {
      "type" : "object"
    },
    "ErrorReturnPojo" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "array",
          "description" : "At least one object describing a failure. If a queue sharing group is involved, the objects will specify the queue managers on which the operation failed.",
          "items" : {
            "$ref" : "#/definitions/ErrorPojo"
          }
        },
        "success" : {
          "type" : "array",
          "description" : "Only produced if a queue sharing group is involved and the operation failed on at least one queue manager. The entries in the array identify queue managers on which the operation succeeded.",
          "items" : {
            "$ref" : "#/definitions/SuccessPojo"
          }
        }
      }
    },
    "SuccessPojo" : {
      "type" : "object",
      "properties" : {
        "qmgrName" : {
          "type" : "string",
          "description" : "The name of a queue manager on which the operation succeeded."
        }
      }
    },
    "Checksum" : {
      "type" : "object",
      "required" : [ "method", "value" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "description" : " "
        },
        "value" : {
          "type" : "string",
          "description" : " "
        }
      }
    },
    "DataSet" : {
      "type" : "object",
      "required" : [ "attributes", "name", "size" ],
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " "
        },
        "name" : {
          "type" : "string",
          "description" : " "
        },
        "attributes" : {
          "type" : "array",
          "description" : " ",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DestinationAgent" : {
      "type" : "object",
      "required" : [ "name", "qmgrName" ],
      "properties" : {
        "qmgrName" : {
          "type" : "string",
          "description" : "\t"
        },
        "name" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "DestinationChecksum" : {
      "type" : "object",
      "required" : [ "method", "value" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "description" : " "
        },
        "value" : {
          "type" : "string",
          "description" : " "
        }
      }
    },
    "DestinationDataSet" : {
      "type" : "object",
      "required" : [ "attributes", "name", "size" ],
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " "
        },
        "name" : {
          "type" : "string",
          "description" : " "
        },
        "attributes" : {
          "type" : "array",
          "description" : " ",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DestinationFile" : {
      "type" : "object",
      "required" : [ "encoding", "endOfLine", "lastModified", "path", "size" ],
      "properties" : {
        "path" : {
          "type" : "string",
          "description" : " "
        },
        "lastModified" : {
          "type" : "string",
          "description" : " "
        },
        "encoding" : {
          "type" : "string",
          "description" : " "
        },
        "endOfLine" : {
          "type" : "string",
          "description" : " "
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " "
        }
      }
    },
    "DestinationQueue" : {
      "type" : "object",
      "required" : [ "delimiter", "delimiterPosition", "delimiterType", "messageCount", "messageLength", "messageOrGroupId", "name", "persistent", "setMqProperties" ],
      "properties" : {
        "messageCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " "
        },
        "delimiter" : {
          "type" : "string",
          "description" : " "
        },
        "delimiterPosition" : {
          "type" : "string",
          "description" : " "
        },
        "delimiterType" : {
          "type" : "string",
          "description" : " "
        },
        "messageLength" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " "
        },
        "name" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " "
        },
        "persistent" : {
          "type" : "boolean",
          "description" : " "
        },
        "messageOrGroupId" : {
          "type" : "string",
          "description" : " "
        },
        "setMqProperties" : {
          "type" : "boolean",
          "description" : " "
        }
      }
    },
    "File" : {
      "type" : "object",
      "required" : [ "encoding", "endOfLine", "lastModified", "path", "size" ],
      "properties" : {
        "path" : {
          "type" : "string",
          "description" : " "
        },
        "lastModified" : {
          "type" : "string",
          "description" : " "
        },
        "encoding" : {
          "type" : "string",
          "description" : " "
        },
        "endOfLine" : {
          "type" : "string",
          "description" : " "
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " "
        }
      }
    },
    "Item" : {
      "type" : "object",
      "required" : [ "mode" ],
      "properties" : {
        "mode" : {
          "type" : "string",
          "description" : " "
        },
        "source" : {
          "$ref" : "#/definitions/Source"
        },
        "destination" : {
          "$ref" : "#/definitions/ItemDestination"
        },
        "status" : {
          "$ref" : "#/definitions/ItemStatus"
        }
      }
    },
    "ItemDestination" : {
      "type" : "object",
      "required" : [ "actionIfExists", "type" ],
      "properties" : {
        "actionIfExists" : {
          "type" : "string",
          "description" : " "
        },
        "type" : {
          "type" : "string",
          "description" : " "
        },
        "checksum" : {
          "$ref" : "#/definitions/DestinationChecksum"
        },
        "file" : {
          "$ref" : "#/definitions/DestinationFile"
        },
        "queue" : {
          "$ref" : "#/definitions/DestinationQueue"
        },
        "dataset" : {
          "$ref" : "#/definitions/DestinationDataSet"
        }
      }
    },
    "ItemStatus" : {
      "type" : "object",
      "required" : [ "description", "state" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : " "
        },
        "state" : {
          "type" : "string",
          "description" : " "
        }
      }
    },
    "Originator" : {
      "type" : "object",
      "required" : [ "host", "mqmdUserId", "userId" ],
      "properties" : {
        "host" : {
          "type" : "string",
          "description" : "\t"
        },
        "mqmdUserId" : {
          "type" : "string",
          "description" : "\t"
        },
        "userId" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "Source" : {
      "type" : "object",
      "required" : [ "disposition", "type" ],
      "properties" : {
        "disposition" : {
          "type" : "string",
          "description" : " "
        },
        "type" : {
          "type" : "string",
          "description" : " "
        },
        "checksum" : {
          "$ref" : "#/definitions/Checksum"
        },
        "file" : {
          "$ref" : "#/definitions/File"
        },
        "dataset" : {
          "$ref" : "#/definitions/DataSet"
        },
        "queue" : {
          "$ref" : "#/definitions/SourceQueue"
        }
      }
    },
    "SourceAgent" : {
      "type" : "object",
      "required" : [ "name", "qmgrName" ],
      "properties" : {
        "qmgrName" : {
          "type" : "string",
          "description" : "\t"
        },
        "name" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "SourceQueue" : {
      "type" : "object",
      "required" : [ "messageCount", "name" ],
      "properties" : {
        "messageCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " "
        },
        "name" : {
          "type" : "string",
          "description" : " "
        }
      }
    },
    "Statistics" : {
      "type" : "object",
      "required" : [ "endTime", "numberOfFileFailures", "numberOfFileSuccesses", "numberOfFileWarnings", "numberOfFiles", "retryCount", "startTime" ],
      "properties" : {
        "numberOfFileFailures" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "numberOfFiles" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "numberOfFileWarnings" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "startTime" : {
          "type" : "string",
          "description" : "\t"
        },
        "numberOfFileSuccesses" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "endTime" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "Status" : {
      "type" : "object",
      "required" : [ "description", "state" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "\t"
        },
        "state" : {
          "type" : "string",
          "description" : "\t"
        }
      }
    },
    "TransferAttributePojo" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "originator" : {
          "$ref" : "#/definitions/Originator"
        },
        "destinationAgent" : {
          "$ref" : "#/definitions/DestinationAgent"
        },
        "sourceAgent" : {
          "$ref" : "#/definitions/SourceAgent"
        },
        "statistics" : {
          "$ref" : "#/definitions/Statistics"
        },
        "transferSet" : {
          "$ref" : "#/definitions/TransferSet"
        },
        "status" : {
          "$ref" : "#/definitions/Status"
        }
      }
    },
    "TransferSet" : {
      "type" : "object",
      "required" : [ "bytesSent" ],
      "properties" : {
        "bytesSent" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " "
        },
        "item" : {
          "$ref" : "#/definitions/Item"
        }
      }
    },
    "CreateTransferAttributePojo" : {
      "type" : "object",
      "properties" : {
        "transferSet" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoTransferSet"
        },
        "scheduleTransfer" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoScheduleTransfer"
        },
        "destinationAgent" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoDestinationAgent"
        },
        "job" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoJob"
        },
        "sourceAgent" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoSourceAgent"
        }
      }
    },
    "CreateTransferAttributePojoAntScript" : {
      "type" : "object",
      "required" : [ "arguments", "name", "target" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "arguments" : {
          "type" : "string"
        },
        "target" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoDatasetExtended" : {
      "type" : "object",
      "required" : [ "delimiterPosition", "hexDelimiters", "keepTrailingSpaces" ],
      "properties" : {
        "keepTrailingSpaces" : {
          "type" : "boolean"
        },
        "hexDelimiters" : {
          "type" : "string"
        },
        "delimiterPosition" : {
          "type" : "string",
          "enum" : [ "prefix", "postfix" ]
        }
      }
    },
    "CreateTransferAttributePojoDestination" : {
      "type" : "object",
      "required" : [ "actionIfExists", "encoding", "endOfLine", "name", "type" ],
      "properties" : {
        "actionIfExists" : {
          "type" : "string",
          "enum" : [ "error", "overwrite" ]
        },
        "endOfLine" : {
          "type" : "string",
          "enum" : [ "LF", "CRLF" ]
        },
        "datasetExtended" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoDatasetExtended"
        },
        "name" : {
          "type" : "string"
        },
        "queueExtended" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoQueueExtended"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "queue", "directory", "file", "dataset", "partionedDataset" ]
        },
        "encoding" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoDestinationAgent" : {
      "type" : "object",
      "required" : [ "name", "qmgrName" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoExecutable" : {
      "type" : "object",
      "required" : [ "arguments", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "arguments" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoItem" : {
      "type" : "object",
      "required" : [ "checksum", "mode" ],
      "properties" : {
        "mode" : {
          "type" : "string",
          "enum" : [ "text", "binary" ]
        },
        "destination" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoDestination"
        },
        "checksum" : {
          "type" : "string",
          "enum" : [ "none", "md5" ]
        },
        "source" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoSource"
        }
      }
    },
    "CreateTransferAttributePojoJcl" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoJob" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoPostDestinationCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoAntScript"
        }
      }
    },
    "CreateTransferAttributePojoPostSourceCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "antScript" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoAntScript"
        },
        "executable" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoExecutable"
        }
      }
    },
    "CreateTransferAttributePojoPreDestinationCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoAntScript"
        }
      }
    },
    "CreateTransferAttributePojoPreSourceCall" : {
      "type" : "object",
      "required" : [ "retryCount", "retryWait", "successReturnCode", "type" ],
      "properties" : {
        "retryWait" : {
          "type" : "integer",
          "format" : "int32"
        },
        "successReturnCode" : {
          "type" : "string"
        },
        "jcl" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoJcl"
        },
        "retryCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "executable", "antScript", "jcl" ]
        },
        "executable" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoExecutable"
        },
        "antScript" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoAntScript"
        }
      }
    },
    "CreateTransferAttributePojoQueueExtended" : {
      "type" : "object",
      "required" : [ "delimiterPosition", "groupId", "hexDelimiters", "messageArrivalWaitTime", "textDelimiters", "useMessageGroup" ],
      "properties" : {
        "useMessageGroup" : {
          "type" : "boolean"
        },
        "hexDelimiters" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "delimiterPosition" : {
          "type" : "string",
          "enum" : [ "prefix", "postfix" ]
        },
        "messageArrivalWaitTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "textDelimiters" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoScheduleTransfer" : {
      "type" : "object",
      "required" : [ "endTime", "occurrenceCount", "occurrenceFrequency", "occurrenceInterval", "startTime", "timeBase" ],
      "properties" : {
        "occurrenceCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "startTime" : {
          "type" : "string"
        },
        "timeBase" : {
          "type" : "string",
          "enum" : [ "admin", "source", "utc" ]
        },
        "endTime" : {
          "type" : "string"
        },
        "occurrenceInterval" : {
          "type" : "string",
          "enum" : [ "minutes", "hours", "days", "weeks", "months", "years" ]
        },
        "occurrenceFrequency" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CreateTransferAttributePojoSource" : {
      "type" : "object",
      "required" : [ "disposition", "encoding", "name", "recursive", "type" ],
      "properties" : {
        "disposition" : {
          "type" : "string",
          "enum" : [ "leave", "delete" ]
        },
        "datasetExtended" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoDatasetExtended"
        },
        "name" : {
          "type" : "string"
        },
        "queueExtended" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoQueueExtended"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "file", "queue" ]
        },
        "encoding" : {
          "type" : "string"
        },
        "recursive" : {
          "type" : "boolean"
        }
      }
    },
    "CreateTransferAttributePojoSourceAgent" : {
      "type" : "object",
      "required" : [ "name", "qmgrName" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        }
      }
    },
    "CreateTransferAttributePojoTransferSet" : {
      "type" : "object",
      "required" : [ "priority", "recoveryTimeout", "userProperties" ],
      "properties" : {
        "item" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreateTransferAttributePojoItem"
          }
        },
        "postDestinationCall" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoPostDestinationCall"
        },
        "recoveryTimeout" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "preDestinationCall" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoPreDestinationCall"
        },
        "postSourceCall" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoPostSourceCall"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "preSourceCall" : {
          "$ref" : "#/definitions/CreateTransferAttributePojoPreSourceCall"
        }
      }
    },
    "ChannelAttributePojo" : {
      "type" : "object",
      "properties" : {
        "requester" : {
          "$ref" : "#/definitions/ChannelAttributePojoRequester"
        },
        "server" : {
          "$ref" : "#/definitions/ChannelAttributePojoServer"
        },
        "transmissionSecurity" : {
          "$ref" : "#/definitions/ChannelAttributePojoTransmissionsecurity"
        },
        "timestamps" : {
          "$ref" : "#/definitions/ChannelAttributePojoTimestamps"
        },
        "batch" : {
          "$ref" : "#/definitions/ChannelAttributePojoBatch"
        },
        "queueSharingGroup" : {
          "$ref" : "#/definitions/ChannelAttributePojoQueuesharinggroup"
        },
        "clusterSender" : {
          "$ref" : "#/definitions/ChannelAttributePojoClustersender"
        },
        "receiverSecurity" : {
          "$ref" : "#/definitions/ChannelAttributePojoReceiversecurity"
        },
        "extended" : {
          "$ref" : "#/definitions/ChannelAttributePojoExtended"
        },
        "failedDelivery" : {
          "$ref" : "#/definitions/ChannelAttributePojoFaileddelivery"
        },
        "general" : {
          "$ref" : "#/definitions/ChannelAttributePojoGeneral"
        },
        "exits" : {
          "$ref" : "#/definitions/ChannelAttributePojoExits"
        },
        "sender" : {
          "$ref" : "#/definitions/ChannelAttributePojoSender"
        },
        "clusterRouting" : {
          "$ref" : "#/definitions/ChannelAttributePojoClusterrouting"
        },
        "connectionManagement" : {
          "$ref" : "#/definitions/ChannelAttributePojoConnectionmanagement"
        },
        "compression" : {
          "$ref" : "#/definitions/ChannelAttributePojoCompression"
        },
        "clusterReceiver" : {
          "$ref" : "#/definitions/ChannelAttributePojoClusterreceiver"
        },
        "dataCollection" : {
          "$ref" : "#/definitions/ChannelAttributePojoDatacollection"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoBatch" : {
      "type" : "object",
      "properties" : {
        "nonPersistentMessageSpeedFast" : {
          "type" : "boolean"
        },
        "messageLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dataLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "preCommitHeartbeat" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeExtend" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoClusterReceiverConnection" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoClusterSenderConnection" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoClusterreceiver" : {
      "type" : "object",
      "properties" : {
        "connection" : {
          "$ref" : "#/definitions/ChannelAttributePojoClusterReceiverConnection"
        },
        "clusterName" : {
          "type" : "string"
        },
        "clusterNamelist" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoClusterrouting" : {
      "type" : "object",
      "properties" : {
        "networkPriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workloadWeight" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workloadPriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workloadRank" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoClustersender" : {
      "type" : "object",
      "properties" : {
        "connection" : {
          "$ref" : "#/definitions/ChannelAttributePojoClusterSenderConnection"
        },
        "clusterName" : {
          "type" : "string"
        },
        "clusterNamelist" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoCompression" : {
      "type" : "object",
      "properties" : {
        "header" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "message" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ChannelAttributePojoConnectionManagementLocalAddress" : {
      "type" : "object",
      "properties" : {
        "portRange" : {
          "type" : "string"
        },
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoConnectionManagementLongRetry" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoConnectionManagementShortRetry" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoConnectionmanagement" : {
      "type" : "object",
      "properties" : {
        "shortRetry" : {
          "$ref" : "#/definitions/ChannelAttributePojoConnectionManagementShortRetry"
        },
        "localAddress" : {
          "$ref" : "#/definitions/ChannelAttributePojoConnectionManagementLocalAddress"
        },
        "longRetry" : {
          "$ref" : "#/definitions/ChannelAttributePojoConnectionManagementLongRetry"
        },
        "keepAliveInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heartbeatInterval" : {
          "type" : "integer",
          "format" : "int32"
        },
        "disconnectInterval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoDatacollection" : {
      "type" : "object",
      "properties" : {
        "monitoring" : {
          "type" : "string"
        },
        "statistics" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoExits" : {
      "type" : "object",
      "properties" : {
        "receive" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChannelAttributePojoExitsReceive"
          }
        },
        "security" : {
          "$ref" : "#/definitions/ChannelAttributePojoExitsSecurity"
        },
        "messageRetry" : {
          "$ref" : "#/definitions/ChannelAttributePojoExitsMessageRetry"
        },
        "message" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChannelAttributePojoExitsMessage"
          }
        },
        "send" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChannelAttributePojoExitsSend"
          }
        }
      }
    },
    "ChannelAttributePojoExitsMessage" : {
      "type" : "object",
      "properties" : {
        "userData" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoExitsMessageRetry" : {
      "type" : "object",
      "properties" : {
        "userData" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoExitsReceive" : {
      "type" : "object",
      "properties" : {
        "userData" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoExitsSecurity" : {
      "type" : "object",
      "properties" : {
        "userData" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoExitsSend" : {
      "type" : "object",
      "properties" : {
        "userData" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoExtended" : {
      "type" : "object",
      "properties" : {
        "sequenceNumberWrap" : {
          "type" : "integer",
          "format" : "int32"
        },
        "channelAgentType" : {
          "type" : "string"
        },
        "securityPolicyProtection" : {
          "type" : "string"
        },
        "senderDataConversion" : {
          "type" : "boolean"
        },
        "resetSequenceNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "messagePropertyControl" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoFailedDeliveryRetry" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "interval" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoFaileddelivery" : {
      "type" : "object",
      "properties" : {
        "retry" : {
          "$ref" : "#/definitions/ChannelAttributePojoFailedDeliveryRetry"
        },
        "useDeadLetterQueue" : {
          "type" : "boolean"
        }
      }
    },
    "ChannelAttributePojoGeneral" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "maximumMessageLength" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ChannelAttributePojoQueuesharinggroup" : {
      "type" : "object",
      "properties" : {
        "disposition" : {
          "type" : "string"
        },
        "defaultChannelDisposition" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoReceiversecurity" : {
      "type" : "object",
      "properties" : {
        "channelAgentUserId" : {
          "type" : "string"
        },
        "putAuthority" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoRequester" : {
      "type" : "object",
      "properties" : {
        "connection" : {
          "$ref" : "#/definitions/ChannelAttributePojoRequesterConnection"
        }
      }
    },
    "ChannelAttributePojoRequesterConnection" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoSender" : {
      "type" : "object",
      "properties" : {
        "connection" : {
          "$ref" : "#/definitions/ChannelAttributePojoSenderConnection"
        },
        "transmissionQueueName" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoSenderConnection" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoServer" : {
      "type" : "object",
      "properties" : {
        "connection" : {
          "$ref" : "#/definitions/ChannelAttributePojoServerConnection"
        },
        "transmissionQueueName" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoServerConnection" : {
      "type" : "object",
      "properties" : {
        "port" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoTimestamps" : {
      "type" : "object",
      "properties" : {
        "altered" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributePojoTransmissionsecurity" : {
      "type" : "object",
      "properties" : {
        "cipherSpecification" : {
          "type" : "string"
        },
        "certificateLabel" : {
          "type" : "string"
        },
        "requirePartnerCertificate" : {
          "type" : "boolean"
        },
        "certificatePeerName" : {
          "type" : "string"
        }
      }
    },
    "ChannelAttributeGetPojo" : {
      "type" : "object",
      "properties" : {
        "requester" : {
          "$ref" : "#/definitions/ChannelAttributePojoRequester"
        },
        "server" : {
          "$ref" : "#/definitions/ChannelAttributePojoServer"
        },
        "transmissionSecurity" : {
          "$ref" : "#/definitions/ChannelAttributePojoTransmissionsecurity"
        },
        "timestamps" : {
          "$ref" : "#/definitions/ChannelAttributePojoTimestamps"
        },
        "batch" : {
          "$ref" : "#/definitions/ChannelAttributePojoBatch"
        },
        "queueSharingGroup" : {
          "$ref" : "#/definitions/ChannelAttributePojoQueuesharinggroup"
        },
        "clusterSender" : {
          "$ref" : "#/definitions/ChannelAttributePojoClustersender"
        },
        "receiverSecurity" : {
          "$ref" : "#/definitions/ChannelAttributePojoReceiversecurity"
        },
        "extended" : {
          "$ref" : "#/definitions/ChannelAttributePojoExtended"
        },
        "failedDelivery" : {
          "$ref" : "#/definitions/ChannelAttributePojoFaileddelivery"
        },
        "general" : {
          "$ref" : "#/definitions/ChannelAttributePojoGeneral"
        },
        "exits" : {
          "$ref" : "#/definitions/ChannelAttributePojoExits"
        },
        "sender" : {
          "$ref" : "#/definitions/ChannelAttributePojoSender"
        },
        "clusterRouting" : {
          "$ref" : "#/definitions/ChannelAttributePojoClusterrouting"
        },
        "connectionManagement" : {
          "$ref" : "#/definitions/ChannelAttributePojoConnectionmanagement"
        },
        "compression" : {
          "$ref" : "#/definitions/ChannelAttributePojoCompression"
        },
        "clusterReceiver" : {
          "$ref" : "#/definitions/ChannelAttributePojoClusterreceiver"
        },
        "dataCollection" : {
          "$ref" : "#/definitions/ChannelAttributePojoDatacollection"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "InstallationAttributePojo" : {
      "type" : "object",
      "required" : [ "name", "platform", "version" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "platform" : {
          "type" : "string"
        },
        "extended" : {
          "$ref" : "#/definitions/InstallationAttributePojoExtended"
        }
      }
    },
    "InstallationAttributePojoExtended" : {
      "type" : "object",
      "required" : [ "dataPath", "description", "installationPath", "level", "maximumCommandLevel", "operatingSystem", "primary" ],
      "properties" : {
        "level" : {
          "type" : "string",
          "description" : "\t"
        },
        "maximumCommandLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "\t"
        },
        "description" : {
          "type" : "string",
          "description" : "\t"
        },
        "installationPath" : {
          "type" : "string",
          "description" : "\t"
        },
        "operatingSystem" : {
          "type" : "string",
          "description" : "\t"
        },
        "dataPath" : {
          "type" : "string",
          "description" : "\t"
        },
        "primary" : {
          "type" : "boolean",
          "description" : "\t"
        }
      }
    },
    "QMAttributeGetPojo" : {
      "type" : "object",
      "required" : [ "instVer", "name", "state" ],
      "properties" : {
        "instVer" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "extended" : {
          "$ref" : "#/definitions/QMAttributePojoExtended"
        },
        "status" : {
          "$ref" : "#/definitions/QMStatusAttributePojo"
        }
      }
    },
    "QMAttributePojoExtended" : {
      "type" : "object",
      "required" : [ "installationName", "isDefaultQmgr", "permitStandby" ],
      "properties" : {
        "installationName" : {
          "type" : "string",
          "description" : "\t"
        },
        "permitStandby" : {
          "type" : "string",
          "description" : "\t"
        },
        "isDefaultQmgr" : {
          "type" : "boolean",
          "description" : "\t"
        }
      }
    },
    "QMStatusAttributePojo" : {
      "type" : "object",
      "properties" : {
        "publishSubscribeState" : {
          "type" : "string"
        },
        "connectionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "channelInitiatorState" : {
          "type" : "string"
        },
        "ldapConnectionState" : {
          "type" : "string"
        },
        "started" : {
          "type" : "string"
        }
      }
    },
    "QMAttributePojo" : {
      "type" : "object",
      "required" : [ "instVer", "name", "state" ],
      "properties" : {
        "instVer" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "extended" : {
          "$ref" : "#/definitions/QMAttributePojoExtended"
        }
      }
    },
    "RunMQSCResponsePojo" : {
      "type" : "object",
      "properties" : {
        "overallCompletionCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "overallReasonCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "commandResponse" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/commandResponsePojo"
          }
        }
      }
    },
    "commandResponsePojo" : {
      "type" : "object",
      "properties" : {
        "completionCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "reasonCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "text" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "QueueManagerActionAttributePojo" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "runCommand", "runCommandJSON" ]
        },
        "command" : {
          "type" : "string"
        },
        "qualifier" : {
          "type" : "object",
          "properties" : { }
        },
        "name" : {
          "type" : "object",
          "properties" : { }
        },
        "responseParameters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "parameters" : {
          "$ref" : "#/definitions/QueueManagerActionAttributePojoParameters"
        }
      }
    },
    "QueueManagerActionAttributePojoParameters" : {
      "type" : "object",
      "properties" : {
        "command" : {
          "type" : "string"
        }
      }
    },
    "MessageAttributePojo" : {
      "type" : "object",
      "properties" : {
        "correlationId" : {
          "type" : "string",
          "description" : "48 character hex-string representing the correlation ID."
        },
        "messageId" : {
          "type" : "string",
          "description" : "48 character hex-string representing the message ID."
        },
        "messageFormat" : {
          "type" : "string",
          "description" : "Message format corresponding to the MQMD field."
        }
      }
    },
    "MessageListAttributePojo" : {
      "type" : "object",
      "properties" : {
        "messages" : {
          "type" : "array",
          "description" : "An array of browse message summaries.",
          "items" : {
            "$ref" : "#/definitions/MessageAttributePojo"
          }
        }
      }
    },
    "QueueAttributePojo" : {
      "type" : "object",
      "properties" : {
        "cluster" : {
          "$ref" : "#/definitions/QueueAttributePojoCluster"
        },
        "timestamps" : {
          "$ref" : "#/definitions/QueueAttributePojoTimestamps"
        },
        "queueSharingGroup" : {
          "$ref" : "#/definitions/QueueAttributePojoQueuesharinggroup"
        },
        "storage" : {
          "$ref" : "#/definitions/QueueAttributePojoStorage"
        },
        "trigger" : {
          "$ref" : "#/definitions/QueueAttributePojoTrigger"
        },
        "remote" : {
          "$ref" : "#/definitions/QueueAttributePojoRemote"
        },
        "extended" : {
          "$ref" : "#/definitions/QueueAttributePojoExtended"
        },
        "applicationDefaults" : {
          "$ref" : "#/definitions/QueueAttributePojoApplicationdefaults"
        },
        "general" : {
          "$ref" : "#/definitions/QueueAttributePojoGeneral"
        },
        "alias" : {
          "$ref" : "#/definitions/QueueAttributePojoAlias"
        },
        "model" : {
          "$ref" : "#/definitions/QueueAttributePojoModel"
        },
        "dynamic" : {
          "$ref" : "#/definitions/QueueAttributePojoDynamic"
        },
        "events" : {
          "$ref" : "#/definitions/QueueAttributePojoEvents"
        },
        "dataCollection" : {
          "$ref" : "#/definitions/QueueAttributePojoDatacollection"
        },
        "status" : {
          "$ref" : "#/definitions/QueueAttributePojoStatus"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoAlias" : {
      "type" : "object",
      "properties" : {
        "targetName" : {
          "type" : "string"
        },
        "targetType" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoApplicationdefaults" : {
      "type" : "object",
      "properties" : {
        "putResponse" : {
          "type" : "string"
        },
        "messagePriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "messagePersistence" : {
          "type" : "string"
        },
        "clusterBind" : {
          "type" : "string"
        },
        "sharedInput" : {
          "type" : "boolean"
        },
        "readAhead" : {
          "type" : "string"
        },
        "messagePropertyControl" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoCluster" : {
      "type" : "object",
      "properties" : {
        "namelist" : {
          "type" : "string"
        },
        "qmgrId" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        },
        "queueType" : {
          "type" : "string"
        },
        "workloadQueueUse" : {
          "type" : "string"
        },
        "workloadPriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transmissionQueueForChannelName" : {
          "type" : "string"
        },
        "workloadRank" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "QueueAttributePojoDatacollection" : {
      "type" : "object",
      "properties" : {
        "accounting" : {
          "type" : "string"
        },
        "monitoring" : {
          "type" : "string"
        },
        "statistics" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoDynamic" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoEvents" : {
      "type" : "object",
      "properties" : {
        "serviceInterval" : {
          "$ref" : "#/definitions/QueueAttributePojoEventsServiceInterval"
        },
        "depth" : {
          "$ref" : "#/definitions/QueueAttributePojoEventsDepth"
        }
      }
    },
    "QueueAttributePojoEventsDepth" : {
      "type" : "object",
      "properties" : {
        "lowPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "highPercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lowEnabled" : {
          "type" : "boolean"
        },
        "fullEnabled" : {
          "type" : "boolean"
        },
        "highEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "QueueAttributePojoEventsServiceInterval" : {
      "type" : "object",
      "properties" : {
        "highEnabled" : {
          "type" : "boolean"
        },
        "okEnabled" : {
          "type" : "boolean"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "QueueAttributePojoExtended" : {
      "type" : "object",
      "properties" : {
        "allowSharedInput" : {
          "type" : "boolean"
        },
        "enableMediaImageOperations" : {
          "type" : "string"
        },
        "backoutRequeueQueueName" : {
          "type" : "string"
        },
        "hardenGetBackout" : {
          "type" : "boolean"
        },
        "custom" : {
          "type" : "string"
        },
        "supportDistributionLists" : {
          "type" : "boolean"
        },
        "backoutThreshold" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "QueueAttributePojoGeneral" : {
      "type" : "object",
      "properties" : {
        "inhibitPut" : {
          "type" : "boolean"
        },
        "inhibitGet" : {
          "type" : "boolean"
        },
        "isTransmissionQueue" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoModel" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoQueuesharinggroup" : {
      "type" : "object",
      "properties" : {
        "disposition" : {
          "type" : "string"
        },
        "structureName" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoRemote" : {
      "type" : "object",
      "properties" : {
        "queueName" : {
          "type" : "string"
        },
        "transmissionQueueName" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoStatus" : {
      "type" : "object",
      "properties" : {
        "tpipeName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "QueueAttributePojoStorage" : {
      "type" : "object",
      "properties" : {
        "indexType" : {
          "type" : "string"
        },
        "storageClass" : {
          "type" : "string"
        },
        "maximumDepth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSet" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumMessageLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "messageDeliverySequence" : {
          "type" : "string"
        },
        "nonPersistentMessageClass" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoTimestamps" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string"
        },
        "clustered" : {
          "type" : "string"
        },
        "altered" : {
          "type" : "string"
        }
      }
    },
    "QueueAttributePojoTrigger" : {
      "type" : "object",
      "properties" : {
        "initiationQueueName" : {
          "type" : "string"
        },
        "depth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "data" : {
          "type" : "string"
        },
        "processName" : {
          "type" : "string"
        },
        "messagePriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        }
      }
    },
    "QueueAttributeGetPojo" : {
      "type" : "object",
      "properties" : {
        "cluster" : {
          "$ref" : "#/definitions/QueueAttributePojoCluster"
        },
        "timestamps" : {
          "$ref" : "#/definitions/QueueAttributePojoTimestamps"
        },
        "queueSharingGroup" : {
          "$ref" : "#/definitions/QueueAttributePojoQueuesharinggroup"
        },
        "storage" : {
          "$ref" : "#/definitions/QueueAttributePojoStorage"
        },
        "trigger" : {
          "$ref" : "#/definitions/QueueAttributePojoTrigger"
        },
        "remote" : {
          "$ref" : "#/definitions/QueueAttributePojoRemote"
        },
        "extended" : {
          "$ref" : "#/definitions/QueueAttributePojoExtended"
        },
        "applicationDefaults" : {
          "$ref" : "#/definitions/QueueAttributePojoApplicationdefaults"
        },
        "general" : {
          "$ref" : "#/definitions/QueueAttributePojoGeneral"
        },
        "alias" : {
          "$ref" : "#/definitions/QueueAttributePojoAlias"
        },
        "model" : {
          "$ref" : "#/definitions/QueueAttributePojoModel"
        },
        "dynamic" : {
          "$ref" : "#/definitions/QueueAttributePojoDynamic"
        },
        "events" : {
          "$ref" : "#/definitions/QueueAttributePojoEvents"
        },
        "dataCollection" : {
          "$ref" : "#/definitions/QueueAttributePojoDatacollection"
        },
        "status" : {
          "$ref" : "#/definitions/QueueStatusAttributePojo"
        },
        "applicationHandle" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QueueHandleAttributePojo"
          }
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "QueueHandleAttributePojo" : {
      "type" : "object",
      "properties" : {
        "unitOfWorkType" : {
          "type" : "string"
        },
        "processSpecificationBlockName" : {
          "type" : "string"
        },
        "processSpecificationTableId" : {
          "type" : "string"
        },
        "asynchronousConsumerState" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "qmgrTransactionId" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "threadId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "addressSpaceId" : {
          "type" : "string"
        },
        "unitOfWorkId" : {
          "type" : "string"
        },
        "cicsTransactionId" : {
          "type" : "string"
        },
        "processId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "channelName" : {
          "type" : "string"
        },
        "tag" : {
          "type" : "string"
        },
        "connectionName" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "cicsTaskNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "openOptions" : {
          "type" : "string"
        }
      }
    },
    "QueueStatusAttributeOnQueueTime" : {
      "type" : "object",
      "properties" : {
        "longSamplePeriod" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shortSamplePeriod" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "QueueStatusAttributePojo" : {
      "type" : "object",
      "properties" : {
        "currentDepth" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastGet" : {
          "type" : "string"
        },
        "onQueueTime" : {
          "$ref" : "#/definitions/QueueStatusAttributeOnQueueTime"
        },
        "uncommittedMessages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mediaRecoveryLogExtent" : {
          "type" : "string"
        },
        "lastPut" : {
          "type" : "string"
        },
        "monitoringRate" : {
          "type" : "string"
        },
        "oldestMessageAge" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tpipeName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "openInputCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "openOutputCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Enumeration" : {
      "type" : "object"
    },
    "Header" : {
      "type" : "object",
      "properties" : {
        "delegate" : {
          "$ref" : "#/definitions/Header"
        }
      }
    },
    "MQCFH" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "delegate" : {
          "$ref" : "#/definitions/Header"
        },
        "strucLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "command" : {
          "type" : "integer",
          "format" : "int32"
        },
        "msgSeqNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "control" : {
          "type" : "integer",
          "format" : "int32"
        },
        "compCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "reason" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parameterCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PCFMessage" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "delegate" : {
          "$ref" : "#/definitions/Header"
        },
        "header" : {
          "$ref" : "#/definitions/MQCFH"
        },
        "parameters" : {
          "$ref" : "#/definitions/Enumeration"
        },
        "command" : {
          "type" : "integer",
          "format" : "int32"
        },
        "msgSeqNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "control" : {
          "type" : "integer",
          "format" : "int32"
        },
        "compCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "reason" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parameterCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parameterVector" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        }
      }
    },
    "PCFAttribute" : {
      "type" : "object",
      "properties" : {
        "subsectionName" : {
          "type" : "string"
        },
        "subsubsectionName" : {
          "type" : "string"
        },
        "filterable" : {
          "type" : "boolean"
        },
        "fullName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "attributeType" : {
          "type" : "string",
          "enum" : [ "NUMBER", "ENUMERATION", "STRING", "BYTESTRING", "NUMBER_ARRAY", "ENUM_ARRAY", "STRING_ARRAY" ]
        },
        "parameter" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "JSONObject" : {
      "type" : "object",
      "properties" : {
        "empty" : {
          "type" : "boolean"
        }
      }
    },
    "SubscriptionAttributePojo" : {
      "type" : "object",
      "properties" : {
        "general" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoGeneral"
        },
        "timestamps" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoTimestamps"
        },
        "destination" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoDestination"
        },
        "topic" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoTopic"
        },
        "selector" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoSelector"
        },
        "user" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoUser"
        },
        "extended" : {
          "$ref" : "#/definitions/SubscriptionAttributePojoExtended"
        },
        "resolvedTopicString" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAttributePojoDestination" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "qmgrName" : {
          "type" : "string"
        },
        "correlationId" : {
          "type" : "string"
        },
        "isManaged" : {
          "type" : "boolean"
        }
      }
    },
    "SubscriptionAttributePojoExtended" : {
      "type" : "object",
      "properties" : {
        "networkScope" : {
          "type" : "string"
        },
        "level" : {
          "type" : "integer",
          "format" : "int32"
        },
        "messagePriority" : {
          "type" : "string"
        },
        "deliverOnRequest" : {
          "type" : "boolean"
        },
        "expiry" : {
          "type" : "integer",
          "format" : "int32"
        },
        "messagePropertyControl" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAttributePojoGeneral" : {
      "type" : "object",
      "properties" : {
        "usesCharacterWildcard" : {
          "type" : "boolean"
        },
        "isDurable" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAttributePojoSelector" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAttributePojoTimestamps" : {
      "type" : "object",
      "properties" : {
        "created" : {
          "type" : "string"
        },
        "altered" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAttributePojoTopic" : {
      "type" : "object",
      "properties" : {
        "definedString" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionAttributePojoUser" : {
      "type" : "object",
      "properties" : {
        "applicationIdentityData" : {
          "type" : "string"
        },
        "accountingToken" : {
          "type" : "string"
        },
        "data" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "isVariable" : {
          "type" : "boolean"
        }
      }
    },
    "UserAttributePojo" : {
      "type" : "object",
      "required" : [ "name", "role" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "role" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "CredentialsPojo" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionResponse" : {
      "type" : "object",
      "required" : [ "feedType", "feedURL" ],
      "properties" : {
        "feedType" : {
          "type" : "string",
          "description" : "Type of the subscription feed"
        },
        "feedURL" : {
          "type" : "string",
          "description" : "URL of the subscription feed"
        }
      }
    },
    "GeneratedDoc" : {
      "type" : "string",
      "format" : "byte"
    },
    "Plans" : {
      "type" : "object",
      "required" : [ "default" ],
      "properties" : {
        "default" : {
          "$ref" : "#/definitions/DefaultPlan"
        }
      }
    },
    "DefaultPlan" : {
      "type" : "object",
      "required" : [ "title" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "description" : "The title of the plan",
          "default" : "Default Plan"
        },
        "rate-limit" : {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "string",
              "default" : "100/hour"
            },
            "hard-limit" : {
              "type" : "boolean",
              "default" : false
            }
          }
        },
        "approval" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "DeploymentVisibility" : {
      "type" : "object",
      "required" : [ "subscribe", "view" ],
      "properties" : {
        "view" : {
          "$ref" : "#/definitions/View"
        },
        "subscribe" : {
          "$ref" : "#/definitions/Subscribe"
        }
      }
    },
    "View" : {
      "type" : "object",
      "required" : [ "enabled", "type" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "Is the plan visible."
        },
        "type" : {
          "type" : "string",
          "enum" : [ "public", "custom", "authenticated" ]
        },
        "tags" : {
          "type" : "array",
          "description" : "When view is custom: The Communities allowed to view this plan.",
          "items" : {
            "type" : "string"
          }
        },
        "orgs" : {
          "type" : "array",
          "description" : "When view is custom: The Organizations allowed to view this plan.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Info" : {
      "type" : "object",
      "required" : [ "name", "title", "version" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the product",
          "default" : "pushed-product"
        },
        "title" : {
          "type" : "string",
          "description" : "The title of the product",
          "default" : "A Product that encapsulates Liberty APIs"
        },
        "version" : {
          "type" : "string",
          "description" : "The version of the product",
          "default" : "1.0.0"
        }
      }
    },
    "Product" : {
      "type" : "object",
      "properties" : {
        "product" : {
          "type" : "string",
          "description" : "Product document version",
          "default" : "1.0.0"
        },
        "info" : {
          "$ref" : "#/definitions/Info"
        },
        "visibility" : {
          "$ref" : "#/definitions/DeploymentVisibility"
        },
        "apis" : {
          "type" : "object",
          "description" : "Apis included in the product",
          "properties" : {
            "liberty" : {
              "$ref" : "#/definitions/ProductApi"
            }
          }
        },
        "plans" : {
          "$ref" : "#/definitions/Plans"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        }
      }
    },
    "Subscribe" : {
      "type" : "object",
      "required" : [ "enabled", "type" ],
      "properties" : {
        "enabled" : {
          "type" : "boolean",
          "description" : "Is the plan visible."
        },
        "type" : {
          "type" : "string",
          "enum" : [ "authenticated", "custom" ]
        },
        "tags" : {
          "type" : "array",
          "description" : "When subscribe is custom: The Communities allowed to subscribe.",
          "items" : {
            "type" : "string"
          }
        },
        "orgs" : {
          "type" : "array",
          "description" : "When subscribe is custom: The Organizations allowed to subscribe.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ProductApi" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "A name:version pair of the Liberty API",
          "default" : "liberty-api:1.0.0"
        }
      },
      "description" : "Product API"
    },
    "PlanPackage" : {
      "type" : "object",
      "properties" : {
        "productName" : {
          "type" : "string"
        },
        "productVersion" : {
          "type" : "string"
        },
        "document" : {
          "$ref" : "#/definitions/ConfigDataObject"
        },
        "productVisibilityMetadata" : {
          "$ref" : "#/definitions/ProductPackageUpdateJsonBody"
        },
        "task" : {
          "$ref" : "#/definitions/TaskListGetResponse"
        },
        "planId" : {
          "type" : "string"
        },
        "planVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "planName" : {
          "type" : "string"
        },
        "planDescription" : {
          "type" : "string"
        },
        "planDisplayName" : {
          "type" : "string"
        },
        "planRequiresApproval" : {
          "type" : "boolean"
        },
        "planRegistrations" : {
          "type" : "integer",
          "format" : "int64"
        },
        "apiId" : {
          "type" : "string"
        },
        "apiName" : {
          "type" : "string"
        },
        "apiVersion" : {
          "type" : "string"
        },
        "apiDescription" : {
          "type" : "string"
        },
        "apiEndpoint" : {
          "type" : "string"
        },
        "vendorExtensions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "url" : {
          "type" : "string"
        },
        "dependents" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PlanPackage"
            }
          }
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        },
        "envId" : {
          "type" : "string"
        },
        "deploymentState" : {
          "type" : "string",
          "enum" : [ "TRANSIENT_REMOVED", "STOPPED", "RUNNING", "SUSPENDED", "ARCHIVED", "RETIRED", "DEPRECATED", "PUBLISHED", "DEPLOYED", "PENDING" ]
        },
        "deploymentVisibility" : {
          "$ref" : "#/definitions/DeploymentVisibility"
        },
        "documentType" : {
          "type" : "string",
          "enum" : [ "POLICYTYPE", "PRODUCTVERSION", "PLANVERSION", "APIRESOURCE", "APIVERSION" ]
        },
        "documentVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "documentId" : {
          "type" : "string"
        },
        "orgId" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "deploymentPackageId" : {
          "type" : "string"
        },
        "pendingDeploymentState" : {
          "type" : "string",
          "enum" : [ "REMOVE", "ARCHIVE", "RETIRE", "DEPRECATE", "SUPERSEDE", "REPLACE", "UPDATE", "PUBLISH", "RESTAGE", "STAGE_FROM_DRAFT" ]
        },
        "supersedes" : {
          "$ref" : "#/definitions/PlanIdentifierTuple"
        },
        "supersededBy" : {
          "$ref" : "#/definitions/PlanIdentifierTuple"
        },
        "affectedPlans" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/PlanIdentifierTuple"
            }
          }
        },
        "operationStatusSummary" : {
          "$ref" : "#/definitions/OperationStatusSummary"
        }
      }
    },
    "ConfigDataObject" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "orgId" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "envId" : {
          "type" : "string"
        }
      }
    },
    "ProductPackageUpdateJsonBody" : {
      "type" : "object",
      "properties" : {
        "visibility" : {
          "$ref" : "#/definitions/DeploymentVisibility"
        }
      }
    },
    "TaskListGetResponse" : {
      "type" : "object",
      "required" : [ "activities", "availableActions", "envId", "id", "orgId", "status", "taskType", "url" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "orgId" : {
          "type" : "string"
        },
        "envId" : {
          "type" : "string"
        },
        "taskType" : {
          "type" : "string",
          "enum" : [ "planSubscriptionApproval", "productDeploymentApproval", "planDeploymentApproval" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "cancelled", "rejected", "approved", "pending" ]
        },
        "taskProperties" : {
          "type" : "string"
        },
        "activities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaskActivityResponse"
          }
        },
        "availableActions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "TaskActivityResponse" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "object",
          "description" : "The action executed by this activity",
          "properties" : { }
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date this action was executed"
        },
        "userId" : {
          "type" : "string",
          "description" : "The id of the user who initiated this action"
        },
        "comment" : {
          "type" : "string",
          "description" : "The user's comment for this action"
        },
        "username" : {
          "type" : "string",
          "description" : "The username of the user who initiated this action"
        },
        "displayName" : {
          "type" : "string",
          "description" : "The display name of the user who initiated this action"
        }
      }
    },
    "PlanIdentifierTuple" : {
      "type" : "object",
      "properties" : {
        "planId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "set" : {
          "type" : "boolean"
        }
      }
    },
    "OperationStatusSummary" : {
      "type" : "object",
      "properties" : {
        "errors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "messages" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    }
  },
  "paths" : {
    "/ibm/api/docs/" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Get a valid Swagger 2.0 document with all REST APIs available from a Liberty instance",
        "description" : "Returns a valid Swagger 2.0 document with all REST APIs available from a Liberty instance merged into a single document. This is useful for consumer applications that want to programmatically navigate the set of available APIs, such as an API Management solution. By default, the document is returned in JSON format. Including an optional 'Accept' header with an 'application/yaml' value provides the document in YAML format. This endpoint has two multiple-cardinality, optional query parameters called 'root' that can filter the found context roots and 'compact' that can control whether the output should be formatted or not.",
        "operationId" : "getDocs",
        "schemes" : [ "https" ],
        "produces" : [ "application/json", "application/yaml" ],
        "parameters" : [ {
          "name" : "root",
          "in" : "query",
          "description" : "Filter the found context roots",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "compact",
          "in" : "query",
          "description" : "Indicates if the output will contain any indenting white spaces, new line feeds, etc. By default, the output will not be compacted",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "accept",
          "in" : "header",
          "description" : "Format of the returned document",
          "required" : false,
          "type" : "string",
          "enum" : [ "application/json", "application/yaml" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "All available or filtered REST APIs from a Liberty instance merged into a single document",
            "schema" : {
              "$ref" : "#/definitions/GeneratedDoc"
            }
          },
          "405" : {
            "description" : "Method not allowed"
          },
          "415" : {
            "description" : "Requested media type is not supported"
          },
          "500" : {
            "description" : "An internal error has occurred"
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibm/api/docs/apiconnect" : {
      "get" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Produces a Swagger document that is ready to be pulled into API Connect",
        "description" : "Returns a valid Swagger 2.0 document with all application REST APIs available from a Liberty instance merged into a single document and with the appropriate gateway attributes and assembly setup to integrate with API Connect. By default, the document is returned in JSON format. Including an optional 'Accept' header with an 'application/yaml' value provides the document in YAML format. This endpoint has a multiple-cardinality, optional query parameter called 'root' that can filter the found context roots. The returned document is always in a non-compact format.",
        "operationId" : "getAPICDocs",
        "schemes" : [ "https" ],
        "produces" : [ "application/json", "application/yaml" ],
        "parameters" : [ {
          "name" : "root",
          "in" : "query",
          "description" : "Filter the found context roots",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "accept",
          "in" : "header",
          "description" : "Format of the returned document",
          "required" : false,
          "type" : "string",
          "enum" : [ "application/json", "application/yaml" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "All available or filtered REST APIs from a Liberty instance merged into a single document",
            "schema" : {
              "$ref" : "#/definitions/GeneratedDoc"
            }
          },
          "405" : {
            "description" : "Method not allowed"
          },
          "415" : {
            "description" : "Requested media type is not supported"
          },
          "500" : {
            "description" : "An internal error has occurred"
          }
        }
      },
      "post" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Push Liberty REST endpoints into an API Connect catalog",
        "description" : "Push Liberty REST endpoints into an API Connect catalog.",
        "operationId" : "postApimProduct",
        "schemes" : [ "https" ],
        "parameters" : [ {
          "name" : "organization",
          "in" : "query",
          "description" : "Name of the organization.  In an on-premises environment the name of the organization is displayed on the API Connect Manager's left side menu.  In Bluemix, the organization is a combination of the Bluemix username (with all @ and . removed), followed by a dash and the space name.  For example, if the Bluemix login username is joe@ibm.com and the space is dev, then the API Connect organization is joeibmcom-dev",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "catalog",
          "in" : "query",
          "description" : "Name of the catalog you want to push your APIs into.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "server",
          "in" : "query",
          "description" : "API Connect's server address.  An on-premises example is https://apimdev0056.ibm.com/apim, and a Bluemix example is https://us.apiconnect.ibmcloud.com (please note the URL will change depending on the region you're using).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "root",
          "in" : "query",
          "description" : "Specify the APIs (context roots) that you want to push into API Connect, or leave empty to push all deployed APIs.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "stageOnly",
          "in" : "query",
          "description" : "Whether or not the product should be only staged, not published into the catalog.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "X-APIM-Authorization",
          "in" : "header",
          "description" : "Credentials to connect to API Connect. It can have two forms, (1) 'username:password', or (2) 'Basic xyz' where 'xyz' is the base64 encoded version of username:password. Standard API Management login requires the username to start with apimanager/",
          "required" : true,
          "type" : "string",
          "format" : "password"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "Format of the input payload, which could be JSON (default) or YAML",
          "required" : false,
          "type" : "string",
          "default" : "application/json",
          "enum" : [ "application/json", "application/yaml" ]
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "A JSON or YAML representation of the API Connect Product",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Product"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully pushed requested Liberty REST endpoints",
            "schema" : {
              "$ref" : "#/definitions/PlanPackage"
            }
          },
          "400" : {
            "description" : "Bad Request. The request could not be understood by the server due to malformed syntax. Please ensure that the inputs are valid"
          },
          "405" : {
            "description" : "Method not allowed"
          },
          "500" : {
            "description" : "An internal error has occurred"
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibm/api/docs/subscription" : {
      "post" : {
        "tags" : [ "API Discovery" ],
        "summary" : "Subscribe to receive REST API updates",
        "description" : "Allows users to subscribe to any REST API update, such as new APIs being available or old APIs being removed. This is useful when a user wants to be notified right away of any changes in the endpoints that are provided by a particular Liberty instance. Note that in addition to the base 'apiDiscovery-1.0' configuration, it is required to also configure either 'websocket-1.0' or 'websocket-1.1' in the 'server.xml'",
        "operationId" : "postSubscription",
        "schemes" : [ "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "A JSON payload specifying the format of the update",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "docType" : {
                "type" : "string",
                "description" : "Format of the update",
                "enum" : [ "Swagger_20_JSON", "Swagger_20_YAML" ],
                "default" : "Swagger_20_JSON"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSON payload outlining the type of subscription feed and its URL",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionResponse"
            }
          },
          "400" : {
            "description" : "Bad Request. The request could not be understood by the server due to malformed syntax. Please ensure that the input payload is valid"
          },
          "405" : {
            "description" : "Method not allowed"
          },
          "500" : {
            "description" : "An internal error has occurred. Ensure either 'websocket-1.0' or 'websocket-1.1' is configured in the 'server.xml'"
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/action/qmgr/{qmgrName}/mqsc" : {
      "post" : {
        "tags" : [ "qmgr : action" ],
        "summary" : "Runs an MQSC command.",
        "description" : "Runs the specified MQSC command on the specified queue manager.",
        "operationId" : "doAction",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager to run the MQSC command on.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueueManagerActionAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArrray of JSONObjects.",
            "schema" : {
              "$ref" : "#/definitions/RunMQSCResponsePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/installation" : {
      "get" : {
        "tags" : [ "installation" ],
        "summary" : "Retrieves details of the IBM MQ installation that is associated with the REST API.",
        "description" : "Retrieves details of the IBM MQ installation that is associated with the REST API, optionally specifying the attributes to retrieve.",
        "operationId" : "getInstallations",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the IBM MQ installation.",
            "schema" : {
              "$ref" : "#/definitions/InstallationAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/installation/{installationName}" : {
      "get" : {
        "tags" : [ "installation" ],
        "summary" : "Retrieves details of a specific IBM MQ installation.",
        "description" : "Retrieves details of a specific IBM MQ installation, which must be the one associated with the REST API, optionally specifying attributes to be retrieved.",
        "operationId" : "getInstallation",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "installationName",
          "in" : "path",
          "description" : "Name of the installation to retrieve details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the IBM MQ installation.",
            "schema" : {
              "$ref" : "#/definitions/InstallationAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/agent" : {
      "get" : {
        "tags" : [ "mft : agent" ],
        "summary" : "Retrieves details of all agents that are registered under the coordination queue manager.",
        "description" : "Retrieves details of all agents that are registered under the coordination queue manager, optionally specifying which agent attributes are retrieved.",
        "operationId" : "getAgents",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "An agent type that specifies which type of agents to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded agent name that specifies which agents to retrieve based on part of the agent name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "An agent state that specifies which agents to retrieve based on the agent state.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the agents.",
            "schema" : {
              "$ref" : "#/definitions/AgentAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/agent/{agentName}" : {
      "get" : {
        "tags" : [ "mft : agent" ],
        "summary" : "Retrieves details of a specific agent that is registered to the coordination queue manager.",
        "description" : "Retrieves details of a specific agent that is registered to the coordination queue manager, optionally specifying which attributes of the agent are retrieved.",
        "operationId" : "getSpecifiedAgent",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "agentName",
          "in" : "path",
          "description" : "The name of the agent to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the agent.",
            "schema" : {
              "$ref" : "#/definitions/AgentAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/monitor" : {
      "get" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Retrieves details of all resource monitors defined in the current configuration, optionally specifying which attributes are retrieved.",
        "description" : "Retrieves details of all resource monitors that are defined in the current configuration, optionally specifying which attributes are retrieved.",
        "operationId" : "getMonitors",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded name that specifies which resource monitors to be retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A value type that specifies which type of monitors to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agentName",
          "in" : "query",
          "description" : "A wildcarded agent name that specifies resource monitors of specified agents to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "A monitor state that specifies which monitors to retrieve based on the specifed state.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the resource monitor.",
            "schema" : {
              "$ref" : "#/definitions/MonitorAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Creates a resource monitor.",
        "description" : "Creates a resourse monitor as per the given input.",
        "operationId" : "createResourceMonitorEntryPoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MonitorAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Empty",
            "schema" : {
              "$ref" : "#/definitions/MonitorAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/monitor/{name}" : {
      "get" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Retrieves details of a specific resource monitor defined in current configuration.",
        "description" : "Retrieves details of a specific resource monitor defined in current configuration, optionally specifying which attributes to be retrieved.",
        "operationId" : "getMonitor",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the monitor to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agentName",
          "in" : "query",
          "description" : "A wildcarded agent name that specifies resource monitors of specified agents to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the agent.",
            "schema" : {
              "$ref" : "#/definitions/MonitorAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Deletes a queue.",
        "description" : "Deletes an existing queue from the named queue manager.",
        "operationId" : "deleteResourceMonitorEntryPoint",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the monitor to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agent",
          "in" : "query",
          "description" : "Name of the agent where the monitor is registered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agentQmgr",
          "in" : "query",
          "description" : "Name of the agent qmgr.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/monitor/{name}/history" : {
      "delete" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Clear history associated with a monitor.",
        "description" : "Clears the history for a particular monitor.",
        "operationId" : "clearResourceMonitorEntryPoint",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the monitor to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agent",
          "in" : "query",
          "description" : "Name of the agent where the monitor is registered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agentQmgr",
          "in" : "query",
          "description" : "Name of the agent qmgr.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/transfer" : {
      "get" : {
        "tags" : [ "mft : transfer" ],
        "summary" : "Retrieves details of all transfers from the coordination queue manager.",
        "description" : "Retrieves details of all transfers from the coordination queue manager that is set in the mqwebuser.xml, optionally specifying attributes to retrieve.",
        "operationId" : "getTransferlist",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "The ID of the transfer that indicates the start of the transfers to retrieve. All transfers that occur after the specified transfer are retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The ID of the transfer that indicates the end of the transfers to retrieve. All transfers that occur before the specified transfer are retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of transfers to retrieve.",
          "required" : false,
          "type" : "string",
          "default" : "100"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the transfer details.",
            "schema" : {
              "$ref" : "#/definitions/TransferAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "mft : transfer" ],
        "summary" : "Creates transfer.",
        "description" : "Creates a new transfer request.",
        "operationId" : "createTransfer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateTransferAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/mft/transfer/{id}" : {
      "get" : {
        "tags" : [ "mft : transfer" ],
        "summary" : "Retrieves details of a specified transfer from the coordination queue manager.",
        "description" : "Retrieves details of a specific transfer from the coordination queue manager that is specified in the mqwebuser.xml, optionally specifying attributes to be retrieved.",
        "operationId" : "getTransferDetailById",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the transfer to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the transfer details.",
            "schema" : {
              "$ref" : "#/definitions/TransferAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr" : {
      "get" : {
        "tags" : [ "qmgr" ],
        "summary" : "Retrieves details of all queue managers in the IBM MQ installation.",
        "description" : "Retrieves details of all queue managers in the same IBM MQ installation as the mqweb server, optionally specifying attributes to retrieve.",
        "operationId" : "getQueueMgrs",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to be retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The queue manager state of the queue managers to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the queue managers.",
            "schema" : {
              "$ref" : "#/definitions/QMAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgrName}/channel" : {
      "get" : {
        "tags" : [ "channel" ],
        "summary" : "Retrieves details of all queue manager to queue manager channels.",
        "description" : "Retrieves details of all queue manager to queue manager channels that are defined in the named queue manager, optionally specifying which channel attributes are retrieved.",
        "operationId" : "getChannels",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the channels of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "A comma-separated list of status attributes, or status attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A channel type that specifies which type of channels to retrieve details for.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "A filter that specifies which channel details to retrieve based on attribute values that match the filter conditions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded channel name that specifies which channels to retrieve details for, based on a section of the channel name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "queueSharingGroupDisposition",
          "in" : "query",
          "description" : "A queue sharing group disposition that specifies which channels to retrieve details for, based on the disposition. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the channels.",
            "schema" : {
              "$ref" : "#/definitions/ChannelAttributeGetPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgrName}/channel/{name}" : {
      "get" : {
        "tags" : [ "channel" ],
        "summary" : "Retrieves details of a specific queue manager to queue manager channel.",
        "description" : "Retrieves details of a named queue manager to queue manager channel that is defined in the named queue manager, optionally specifying which attributes of the channels are retrieved.",
        "operationId" : "getChannelByName",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the channel of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the channel to retrieve details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "A comma-separated list of current status attributes, or status attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "A filter that specifies which channels to retrieve details for, based on attribute values that match the filter conditions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "queueSharingGroupDisposition",
          "in" : "query",
          "description" : "A queue sharing group disposition that specifies which channels to retrieve details for, based on the disposition. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject describing the channel.",
            "schema" : {
              "$ref" : "#/definitions/ChannelAttributeGetPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgrName}/queue" : {
      "get" : {
        "tags" : [ "queue" ],
        "summary" : "Retrieves details of all queues.",
        "description" : "Retrieves details of all queues that are defined in the named queue manager, optionally specifying which queue attributes are retrieved.",
        "operationId" : "getQueues",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A queue type that specifies which type of queues to retrieve details for.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded queue name that specifies which queues to retrieve details for, based on a section of the queue name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "A comma-separated list of status attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "applicationHandle",
          "in" : "query",
          "description" : "A comma-separated list of application handle attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "A filter that specifies which queues to retrieve details for, based on attribute values that match the filter conditions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "commandScope",
          "in" : "query",
          "description" : "A command scope that specifies the scope of the command when the specified queue is a member of a queue sharing group. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "queueSharingGroupDisposition",
          "in" : "query",
          "description" : "A queue sharing group disposition that specifies which queue to retrieve details for, based on the disposition. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the queues.",
            "schema" : {
              "$ref" : "#/definitions/QueueAttributeGetPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "queue" ],
        "summary" : "Creates a queue.",
        "description" : "Creates a new queue in the named queue manager.",
        "operationId" : "createQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager to contain the created queue.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "like",
          "in" : "query",
          "description" : "The name of a queue to copy to create the new queue.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "noReplace",
          "in" : "query",
          "description" : "A flag that specifies whether a pre-existing queue is left unchanged rather than replaced. This flag takes no value.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "commandScope",
          "in" : "query",
          "description" : "A command scope that specifies the scope of the command when the queue is a member of a queue sharing group. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueueAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgrName}/queue/{qName}" : {
      "get" : {
        "tags" : [ "queue" ],
        "summary" : "Retrieves details of a specific queue.",
        "description" : "Retrieves details of a named queue that is defined in the named queue manager, optionally specifying which queue attributes are retrieved.",
        "operationId" : "getQueue",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A queue type that specifies which type of queues to retrieve details for.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes ,or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "A comma-separated list of status attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "applicationHandle",
          "in" : "query",
          "description" : "A comma-separated list of application handle attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "A filter that specifies which queues to retrieve details for, based on attribute values that match the filter conditions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "commandScope",
          "in" : "query",
          "description" : "A command scope that specifies the scope of the command when the specified queue is a member of a queue sharing group. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "queueSharingGroupDisposition",
          "in" : "query",
          "description" : "A queue sharing group disposition that specifies which queue to retrieve details for, based on the disposition. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the queue.",
            "schema" : {
              "$ref" : "#/definitions/QueueAttributeGetPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue" ],
        "summary" : "Deletes a queue.",
        "description" : "Deletes an existing queue from the named queue manager.",
        "operationId" : "deleteQueue",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue to delete.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to delete.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keepAuthorityRecords",
          "in" : "query",
          "description" : "A flag that specifies whether the associated authority record is retained.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "purge",
          "in" : "query",
          "description" : "A flag that specifies whether non-empty queues are purged. If this flag is not set the delete operation fails for non-empty queues. This flag takes no value.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "commandScope",
          "in" : "query",
          "description" : "A command scope that specifies the scope of the command when the queue is a member of a queue sharing group. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "queueSharingGroupDisposition",
          "in" : "query",
          "description" : "A queue sharing group disposition that specifies which queues to delete, based on the disposition. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue" ],
        "summary" : "Modifies a queue.",
        "description" : "Modifies an existing queue in the named queue manager.",
        "operationId" : "modifyQueue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "A flag that specifies whether the command is forced to complete when it affects an open queue. This flag takes no value.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "commandScope",
          "in" : "query",
          "description" : "A command scope that specifies the scope of the command when the queue is a member of a queue sharing group. Applies to z/OS only.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueueAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgrName}/subscription" : {
      "get" : {
        "tags" : [ "subscription" ],
        "summary" : "Retrieves details of all subscriptions.",
        "description" : "Retrieves details of all subscriptions that are defined in the named queue manager, optionally specifying which subscription attributes are retrieved.",
        "operationId" : "getSubscriptions",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the subscription of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded subscription name that specifies which subscription details to retrieve based on a section of the subscription name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "A wildcarded subscription ID that specifies which subscription details to retrieve based on a section of the subscription ID.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "A filter that specifies which subscription details to retrieve based on attribute values that match the filter conditions.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request. ",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the subscriptions.",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgrName}/subscription/{name}" : {
      "get" : {
        "tags" : [ "subscription" ],
        "summary" : "Retrieves details of a specific subscription.",
        "description" : "Retrieves details of a specific subscription that is defined in the named queue manager, optionally specifying which subscription attributes are retrieved.",
        "operationId" : "getSubscriptionByName",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the subscription of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the subscription to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request. ",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the subscription.",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/admin/qmgr/{qmgr}" : {
      "get" : {
        "tags" : [ "qmgr" ],
        "summary" : "Retrieves details of a specific queue manager in the IBM MQ installation.",
        "description" : "Retrieves details of a specific queue manager in the IBM MQ installation, optionally specifying attributes to retrieve.",
        "operationId" : "getQueueMgr",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgr",
          "in" : "path",
          "description" : "The name of the queue manager to retrieve details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "A comma-separated list of status attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the queue manager.",
            "schema" : {
              "$ref" : "#/definitions/QMAttributeGetPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/login" : {
      "get" : {
        "tags" : [ "login" ],
        "summary" : "Queries the authenticated user and their roles.",
        "description" : "Retrieves details of the authenticated user and their roles.",
        "operationId" : "getLogin",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the authenticated user.",
            "schema" : {
              "$ref" : "#/definitions/UserAttributePojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "login" ],
        "summary" : "Logs in a user.",
        "description" : "Authenticates a user and returns an authentication token.",
        "operationId" : "postLogin",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialsPojo"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty"
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "login" ],
        "summary" : "Logs out a user.",
        "description" : "Deletes the authentication token of the logged in user.",
        "operationId" : "deleteLogin",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/messaging/qmgr/{qmgrName}/queue/{qName}/message" : {
      "get" : {
        "tags" : [ "messaging" ],
        "summary" : "Browses the next message from a specified queue.",
        "description" : "Non-destructively retrieves the next available text message from an IBM MQ queue.",
        "operationId" : "browseGetMethod",
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve a message from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "A 48 character correlation ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageId",
          "in" : "query",
          "description" : "A 48 character message ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A plain text body of the retrieved message or a JSON formatted message list."
          },
          "204" : {
            "description" : "{ empty }"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "501" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "messaging" ],
        "summary" : "Sends a message to a specified queue.",
        "description" : "Sends a UTF-8 encoded text message to an IBM MQ queue.",
        "operationId" : "sendPostMethod",
        "consumes" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8", "text/html; charset=utf-8", "text/xml; charset=utf-8", "application/xml; charset=utf-8" ],
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "Name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to send the message to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-md-correlationId",
          "in" : "header",
          "description" : "A 48 character correlation ID.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-md-expiry",
          "in" : "header",
          "description" : "The maximum time to keep the message on the queue, in milliseconds.",
          "required" : false,
          "type" : "string",
          "default" : "unlimited"
        }, {
          "name" : "ibm-mq-md-persistence",
          "in" : "header",
          "description" : "The message persistence.",
          "required" : false,
          "type" : "string",
          "default" : "nonPersistent",
          "enum" : [ "nonPersistent", "persistent" ]
        }, {
          "name" : "ibm-mq-md-replyTo",
          "in" : "header",
          "description" : "The reply-to destination for the message.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "{empty}"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "415" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "messaging" ],
        "summary" : "Retrieves the next message from a specified queue.",
        "description" : "Destructively retrieves the next available text message from an IBM MQ queue.",
        "operationId" : "receiveDeleteMethod",
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve a message from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "A 48 character correlation ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageId",
          "in" : "query",
          "description" : "A 48 character message ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "wait",
          "in" : "query",
          "description" : "The maximum duration to wait for next message, in milliseconds.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A plain text body of the retrieved message."
          },
          "204" : {
            "description" : "{ empty }"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "501" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v1/messaging/qmgr/{qmgrName}/queue/{qName}/messagelist" : {
      "get" : {
        "tags" : [ "messaging" ],
        "summary" : "Browses messages from a specified queue.",
        "description" : "Non-destructively retrieves the corresponding JSON browse message list.",
        "operationId" : "browseListGetMethod",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve a message from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "A 48 character correlation ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageId",
          "in" : "query",
          "description" : "A 48 character message ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of message elements to return.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains the formatted message list.",
            "schema" : {
              "$ref" : "#/definitions/MessageListAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "501" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/action/qmgr/{qmgrName}/mqsc" : {
      "post" : {
        "tags" : [ "qmgr : action" ],
        "summary" : "Runs an MQSC command.",
        "description" : "Runs the specified MQSC command on the specified queue manager.",
        "operationId" : "doAction_0",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager to run the MQSC command on.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/QueueManagerActionAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArrray of JSONObjects.",
            "schema" : {
              "$ref" : "#/definitions/RunMQSCResponsePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/installation" : {
      "get" : {
        "tags" : [ "installation" ],
        "summary" : "Retrieves details of the IBM MQ installation that is associated with the REST API.",
        "description" : "Retrieves details of the IBM MQ installation that is associated with the REST API, optionally specifying the attributes to retrieve.",
        "operationId" : "getInstallations_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the IBM MQ installation.",
            "schema" : {
              "$ref" : "#/definitions/InstallationAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/installation/{installationName}" : {
      "get" : {
        "tags" : [ "installation" ],
        "summary" : "Retrieves details of a specific IBM MQ installation.",
        "description" : "Retrieves details of a specific IBM MQ installation, which must be the one associated with the REST API, optionally specifying attributes to be retrieved.",
        "operationId" : "getInstallation_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "installationName",
          "in" : "path",
          "description" : "Name of the installation to retrieve details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the IBM MQ installation.",
            "schema" : {
              "$ref" : "#/definitions/InstallationAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/agent" : {
      "get" : {
        "tags" : [ "mft : agent" ],
        "summary" : "Retrieves details of all agents that are registered under the coordination queue manager.",
        "description" : "Retrieves details of all agents that are registered under the coordination queue manager, optionally specifying which agent attributes are retrieved.",
        "operationId" : "getAgents_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "An agent type that specifies which type of agents to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded agent name that specifies which agents to retrieve based on part of the agent name.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "An agent state that specifies which agents to retrieve based on the agent state.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the agents.",
            "schema" : {
              "$ref" : "#/definitions/AgentAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/agent/{agentName}" : {
      "get" : {
        "tags" : [ "mft : agent" ],
        "summary" : "Retrieves details of a specific agent that is registered to the coordination queue manager.",
        "description" : "Retrieves details of a specific agent that is registered to the coordination queue manager, optionally specifying which attributes of the agent are retrieved.",
        "operationId" : "getSpecifiedAgent_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "agentName",
          "in" : "path",
          "description" : "The name of the agent to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the agent.",
            "schema" : {
              "$ref" : "#/definitions/AgentAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/monitor" : {
      "get" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Retrieves details of all resource monitors defined in the current configuration, optionally specifying which attributes are retrieved.",
        "description" : "Retrieves details of all resource monitors that are defined in the current configuration, optionally specifying which attributes are retrieved.",
        "operationId" : "getMonitors_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A wildcarded name that specifies which resource monitors to be retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "A value type that specifies which type of monitors to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agentName",
          "in" : "query",
          "description" : "A wildcarded agent name that specifies resource monitors of specified agents to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "A monitor state that specifies which monitors to retrieve based on the specifed state.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the resource monitor.",
            "schema" : {
              "$ref" : "#/definitions/MonitorAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Creates a resource monitor.",
        "description" : "Creates a resourse monitor as per the given input.",
        "operationId" : "createResourceMonitorEntryPoint_0",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MonitorAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Empty",
            "schema" : {
              "$ref" : "#/definitions/MonitorAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/monitor/{name}" : {
      "get" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Retrieves details of a specific resource monitor defined in current configuration.",
        "description" : "Retrieves details of a specific resource monitor defined in current configuration, optionally specifying which attributes to be retrieved.",
        "operationId" : "getMonitor_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the monitor to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agentName",
          "in" : "query",
          "description" : "A wildcarded agent name that specifies resource monitors of specified agents to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the agent.",
            "schema" : {
              "$ref" : "#/definitions/MonitorAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Deletes a queue.",
        "description" : "Deletes an existing queue from the named queue manager.",
        "operationId" : "deleteResourceMonitorEntryPoint_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the monitor to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agent",
          "in" : "query",
          "description" : "Name of the agent where the monitor is registered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agentQmgr",
          "in" : "query",
          "description" : "Name of the agent qmgr.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/monitor/{name}/history" : {
      "delete" : {
        "tags" : [ "mft : monitor" ],
        "summary" : "Clear history associated with a monitor.",
        "description" : "Clears the history for a particular monitor.",
        "operationId" : "clearResourceMonitorEntryPoint_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the monitor to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "agent",
          "in" : "query",
          "description" : "Name of the agent where the monitor is registered.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "agentQmgr",
          "in" : "query",
          "description" : "Name of the agent qmgr.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorReturnPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/transfer" : {
      "get" : {
        "tags" : [ "mft : transfer" ],
        "summary" : "Retrieves details of all transfers from the coordination queue manager.",
        "description" : "Retrieves details of all transfers from the coordination queue manager that is set in the mqwebuser.xml, optionally specifying attributes to retrieve.",
        "operationId" : "getTransferlist_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "after",
          "in" : "query",
          "description" : "The ID of the transfer that indicates the start of the transfers to retrieve. All transfers that occur after the specified transfer are retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The ID of the transfer that indicates the end of the transfers to retrieve. All transfers that occur before the specified transfer are retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of transfers to retrieve.",
          "required" : false,
          "type" : "string",
          "default" : "100"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the transfer details.",
            "schema" : {
              "$ref" : "#/definitions/TransferAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "mft : transfer" ],
        "summary" : "Creates transfer.",
        "description" : "Creates a new transfer request.",
        "operationId" : "createTransfer_0",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateTransferAttributePojo"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/mft/transfer/{id}" : {
      "get" : {
        "tags" : [ "mft : transfer" ],
        "summary" : "Retrieves details of a specified transfer from the coordination queue manager.",
        "description" : "Retrieves details of a specific transfer from the coordination queue manager that is specified in the mqwebuser.xml, optionally specifying attributes to be retrieved.",
        "operationId" : "getTransferDetailById_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the transfer to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the transfer details.",
            "schema" : {
              "$ref" : "#/definitions/TransferAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/qmgr" : {
      "get" : {
        "tags" : [ "qmgr" ],
        "summary" : "Retrieves details of all queue managers in the IBM MQ installation.",
        "description" : "Retrieves details of all queue managers in the same IBM MQ installation as the mqweb server, optionally specifying attributes to retrieve.",
        "operationId" : "getQueueMgrs_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to be retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The queue manager state of the queue managers to retrieve.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the queue managers.",
            "schema" : {
              "$ref" : "#/definitions/QMAttributePojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/admin/qmgr/{qmgr}" : {
      "get" : {
        "tags" : [ "qmgr" ],
        "summary" : "Retrieves details of a specific queue manager in the IBM MQ installation.",
        "description" : "Retrieves details of a specific queue manager in the IBM MQ installation, optionally specifying attributes to retrieve.",
        "operationId" : "getQueueMgr_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgr",
          "in" : "path",
          "description" : "The name of the queue manager to retrieve details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attributes",
          "in" : "query",
          "description" : "A comma-separated list of attributes, or attribute sections, to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "A comma-separated list of status attributes to retrieve.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-gateway-qmgr",
          "in" : "header",
          "description" : "The name of the gateway queue manager to use for the request.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains a JSONObject that describes the queue manager.",
            "schema" : {
              "$ref" : "#/definitions/QMAttributeGetPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/login" : {
      "get" : {
        "tags" : [ "login" ],
        "summary" : "Queries the authenticated user and their roles.",
        "description" : "Retrieves details of the authenticated user and their roles.",
        "operationId" : "getLogin_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains JSONObjects that describe the authenticated user.",
            "schema" : {
              "$ref" : "#/definitions/UserAttributePojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "login" ],
        "summary" : "Logs in a user.",
        "description" : "Authenticates a user and returns an authentication token.",
        "operationId" : "postLogin_0",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialsPojo"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty"
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "login" ],
        "summary" : "Logs out a user.",
        "description" : "Deletes the authentication token of the logged in user.",
        "operationId" : "deleteLogin_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Empty"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/messaging/qmgr/{qmgrName}/queue/{qName}/message" : {
      "get" : {
        "tags" : [ "messaging" ],
        "summary" : "Browses the next message from a specified queue.",
        "description" : "Non-destructively retrieves the next available text message from an IBM MQ queue.",
        "operationId" : "browseGetMethod_0",
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve a message from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "A 48 character correlation ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageId",
          "in" : "query",
          "description" : "A 48 character message ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A plain text body of the retrieved message or a JSON formatted message list."
          },
          "204" : {
            "description" : "{ empty }"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "501" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "messaging" ],
        "summary" : "Sends a message to a specified queue.",
        "description" : "Sends a UTF-8 encoded text message to an IBM MQ queue.",
        "operationId" : "sendPostMethod_0",
        "consumes" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8", "text/html; charset=utf-8", "text/xml; charset=utf-8", "application/xml; charset=utf-8" ],
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "Name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to send the message to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-md-correlationId",
          "in" : "header",
          "description" : "A 48 character correlation ID.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-md-expiry",
          "in" : "header",
          "description" : "The maximum time to keep the message on the queue, in milliseconds.",
          "required" : false,
          "type" : "string",
          "default" : "unlimited"
        }, {
          "name" : "ibm-mq-md-persistence",
          "in" : "header",
          "description" : "The message persistence.",
          "required" : false,
          "type" : "string",
          "default" : "nonPersistent",
          "enum" : [ "nonPersistent", "persistent" ]
        }, {
          "name" : "ibm-mq-md-replyTo",
          "in" : "header",
          "description" : "The reply-to destination for the message.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "{empty}"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "415" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "messaging" ],
        "summary" : "Retrieves the next message from a specified queue.",
        "description" : "Destructively retrieves the next available text message from an IBM MQ queue.",
        "operationId" : "receiveDeleteMethod_0",
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve a message from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "A 48 character correlation ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageId",
          "in" : "query",
          "description" : "A 48 character message ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "wait",
          "in" : "query",
          "description" : "The maximum duration to wait for next message, in milliseconds.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A plain text body of the retrieved message."
          },
          "204" : {
            "description" : "{ empty }"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "501" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/messaging/qmgr/{qmgrName}/queue/{qName}/messagelist" : {
      "get" : {
        "tags" : [ "messaging" ],
        "summary" : "Browses messages from a specified queue.",
        "description" : "Non-destructively retrieves the corresponding JSON browse message list.",
        "operationId" : "browseListGetMethod_0",
        "produces" : [ "application/json; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "The name of the queue manager that contains the queue of interest.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "qName",
          "in" : "path",
          "description" : "The name of the queue to retrieve a message from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "A 48 character correlation ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "messageId",
          "in" : "query",
          "description" : "A 48 character message ID hex-string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of message elements to return.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JSONArray that contains the formatted message list.",
            "schema" : {
              "$ref" : "#/definitions/MessageListAttributePojo"
            }
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "501" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/ibmmq/rest/v2/messaging/qmgr/{qmgrName}/topic/{topicString}/message" : {
      "post" : {
        "tags" : [ "messaging" ],
        "summary" : "Publishes a message to a specified topic.",
        "description" : "Publishes a UTF-8 encoded text message to an IBM MQ topic.",
        "operationId" : "publishPostMethod",
        "consumes" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8", "text/html; charset=utf-8", "text/xml; charset=utf-8", "application/xml; charset=utf-8" ],
        "produces" : [ "application/json; charset=utf-8", "text/plain; charset=utf-8" ],
        "parameters" : [ {
          "name" : "qmgrName",
          "in" : "path",
          "description" : "Name of the queue manager to publish to the topic destination.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "topicString",
          "in" : "path",
          "description" : "The name of the topic to publish the message to.",
          "required" : true,
          "type" : "string",
          "pattern" : ".+"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ibm-mq-rest-csrf-token",
          "in" : "header",
          "description" : "The CSRF protection header. The value can be any value, including a blank string.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ibm-mq-md-expiry",
          "in" : "header",
          "description" : "The maximum time to retain the message, in milliseconds.",
          "required" : false,
          "type" : "string",
          "default" : "unlimited"
        }, {
          "name" : "ibm-mq-md-persistence",
          "in" : "header",
          "description" : "The message persistence.",
          "required" : false,
          "type" : "string",
          "default" : "nonPersistent",
          "enum" : [ "nonPersistent", "persistent" ]
        }, {
          "name" : "ibm-mq-md-replyTo",
          "in" : "header",
          "description" : "The reply-to destination for the message.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "{empty}"
          },
          "400" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "401" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "403" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "404" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "405" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "415" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "500" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "502" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          },
          "503" : {
            "description" : "A JSONArray that contains a JSONObject that describes the error that occurred.",
            "schema" : {
              "$ref" : "#/definitions/ErrorPojo"
            }
          }
        }
      },
      "parameters" : [ ]
    }
  },
  "x-ibm-services" : [ "/ibmmq/rest", "/ibmmq/console/internal" ]
}